{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar jsonwebtoken_1 = require(\"jsonwebtoken\");\n\nfunction fieldFromDablJWT(token, fieldName) {\n  var decoded = jsonwebtoken_1.decode(token);\n\n  if (!decoded || typeof decoded === \"string\") {\n    console.warn(\"JWT not in projectDABL format: \" + token);\n    return null;\n  } else {\n    return decoded[fieldName];\n  }\n}\n/**\n * Extract the name of the party, as supplied when that Party authenticates themselves with DABL, from a JWT token.\n * @param token A JWT from DABL.\n */\n\n\nfunction partyName(token) {\n  return fieldFromDablJWT(token, \"partyName\");\n}\n\nexports.partyName = partyName;\n/**\n * JWT's from DABL expire every 24 hours.\n * @param token A JWT from DABL.\n */\n\nfunction expiredToken(token) {\n  console.log('HERE');\n  var expInUnixEpoch = fieldFromDablJWT(token, \"exp\");\n\n  if (expInUnixEpoch === null) {\n    return true;\n  } else {\n    var asSeconds = parseInt(expInUnixEpoch, 10);\n\n    if (asSeconds === undefined) {\n      return true;\n    } else {\n      return asSeconds <= new Date().getTime() / 1000;\n    }\n  }\n}\n\nexports.expiredToken = expiredToken;","map":{"version":3,"sources":["/Users/sarahbreckenridge/diversity-index/app/ui/node_modules/@daml/react/JwtTokens.js"],"names":["Object","defineProperty","exports","value","jsonwebtoken_1","require","fieldFromDablJWT","token","fieldName","decoded","decode","console","warn","partyName","expiredToken","log","expInUnixEpoch","asSeconds","parseInt","undefined","Date","getTime"],"mappings":"AAAA;;AACAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;AAAEC,EAAAA,KAAK,EAAE;AAAT,CAA7C;;AACA,IAAIC,cAAc,GAAGC,OAAO,CAAC,cAAD,CAA5B;;AACA,SAASC,gBAAT,CAA0BC,KAA1B,EAAiCC,SAAjC,EAA4C;AACxC,MAAIC,OAAO,GAAGL,cAAc,CAACM,MAAf,CAAsBH,KAAtB,CAAd;;AACA,MAAI,CAACE,OAAD,IAAY,OAAQA,OAAR,KAAqB,QAArC,EAA+C;AAC3CE,IAAAA,OAAO,CAACC,IAAR,CAAa,oCAAoCL,KAAjD;AACA,WAAO,IAAP;AACH,GAHD,MAIK;AACD,WAAOE,OAAO,CAACD,SAAD,CAAd;AACH;AACJ;AACD;AACA;AACA;AACA;;;AACA,SAASK,SAAT,CAAmBN,KAAnB,EAA0B;AACtB,SAAOD,gBAAgB,CAACC,KAAD,EAAQ,WAAR,CAAvB;AACH;;AACDL,OAAO,CAACW,SAAR,GAAoBA,SAApB;AACA;AACA;AACA;AACA;;AACA,SAASC,YAAT,CAAsBP,KAAtB,EAA6B;AACzBI,EAAAA,OAAO,CAACI,GAAR,CAAY,MAAZ;AACA,MAAIC,cAAc,GAAGV,gBAAgB,CAACC,KAAD,EAAQ,KAAR,CAArC;;AACA,MAAIS,cAAc,KAAK,IAAvB,EAA6B;AACzB,WAAO,IAAP;AACH,GAFD,MAGK;AACD,QAAIC,SAAS,GAAGC,QAAQ,CAACF,cAAD,EAAiB,EAAjB,CAAxB;;AACA,QAAIC,SAAS,KAAKE,SAAlB,EAA6B;AACzB,aAAO,IAAP;AACH,KAFD,MAGK;AACD,aAAOF,SAAS,IAAK,IAAIG,IAAJ,EAAD,CAAaC,OAAb,KAAyB,IAA7C;AACH;AACJ;AACJ;;AACDnB,OAAO,CAACY,YAAR,GAAuBA,YAAvB","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar jsonwebtoken_1 = require(\"jsonwebtoken\");\nfunction fieldFromDablJWT(token, fieldName) {\n    var decoded = jsonwebtoken_1.decode(token);\n    if (!decoded || typeof (decoded) === \"string\") {\n        console.warn(\"JWT not in projectDABL format: \" + token);\n        return null;\n    }\n    else {\n        return decoded[fieldName];\n    }\n}\n/**\n * Extract the name of the party, as supplied when that Party authenticates themselves with DABL, from a JWT token.\n * @param token A JWT from DABL.\n */\nfunction partyName(token) {\n    return fieldFromDablJWT(token, \"partyName\");\n}\nexports.partyName = partyName;\n/**\n * JWT's from DABL expire every 24 hours.\n * @param token A JWT from DABL.\n */\nfunction expiredToken(token) {\n    console.log('HERE')\n    var expInUnixEpoch = fieldFromDablJWT(token, \"exp\");\n    if (expInUnixEpoch === null) {\n        return true;\n    }\n    else {\n        var asSeconds = parseInt(expInUnixEpoch, 10);\n        if (asSeconds === undefined) {\n            return true;\n        }\n        else {\n            return asSeconds <= (new Date()).getTime() / 1000;\n        }\n    }\n}\nexports.expiredToken = expiredToken;\n//# sourceMappingURL=JwtTokens.js.map\n"]},"metadata":{},"sourceType":"script"}